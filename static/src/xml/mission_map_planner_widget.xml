<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">

    <t t-name="transport_management.MissionMapPlannerWidget" owl="1">
        <div class="tm_main_container tm-mission-mixed">
            <!-- LEFT COLUMN: Interactive Map -->
            <div class="tm_map_column">
                <div class="tm_map_panel">
                    <div class="tm_map_header">
                        <h3><i class="fa fa-map-marker-alt me-2"/>Mission Route Planner</h3>
                        <div class="tm_map_controls">
                            <button type="button" class="btn btn-sm btn-outline-primary" t-on-click="clearAllMarkers">
                                <i class="fa fa-trash me-1"/>Clear All
                            </button>
                            <button type="button" class="btn btn-sm btn-outline-info ms-2" t-on-click="fitMapToMarkers">
                                <i class="fa fa-search me-1"/>Fit to View
                            </button>
                        </div>
                    </div>
                    
                    <!-- Mission Status and Optimization Panel -->
                    <div class="tm_map_status_panel">
                        <div class="tm_status_section">
                            <div class="tm_status_header">
                                <h5><i class="fa fa-tasks me-2"/>Mission Status</h5>
                            </div>
                            <div class="tm_status_controls">
                                <div class="tm_status_buttons">
                                    <!-- Draft Status - Always visible, shows current state -->
                                    <div class="tm_status_indicator tm_status_draft" 
                                         t-att-class="{'active': props.record.data.state === 'draft'}">
                                        <span>Draft</span>
                                    </div>
                                    
                                    <!-- Confirm Button - Only show if in draft state -->
                                    <button type="button" 
                                            t-if="props.record.data.state === 'draft'"
                                            class="tm_status_btn tm_status_confirmed" 
                                            t-on-click="() => this.updateMissionState('confirmed')">
                                        <i class="fa fa-check me-1"/>
                                        <span>Confirm</span>
                                    </button>
                                    
                                    <!-- Confirmed Status Indicator -->
                                    <div t-if="props.record.data.state !== 'draft'"
                                         class="tm_status_indicator tm_status_confirmed" 
                                         t-att-class="{'active': props.record.data.state === 'confirmed'}">
                                        <i class="fa fa-check me-1"/>
                                        <span>Confirmed</span>
                                    </div>
                                    
                                    <!-- Start Button - Only show if confirmed -->
                                    <button type="button" 
                                            t-if="props.record.data.state === 'confirmed'"
                                            class="tm_status_btn tm_status_progress" 
                                            t-on-click="() => this.updateMissionState('in_progress')">
                                        <i class="fa fa-play me-1"/>
                                        <span>Start</span>
                                    </button>
                                    
                                    <!-- In Progress Status Indicator -->
                                    <div t-if="props.record.data.state === 'in_progress' || props.record.data.state === 'done' || props.record.data.state === 'cancelled'"
                                         class="tm_status_indicator tm_status_progress" 
                                         t-att-class="{'active': props.record.data.state === 'in_progress'}">
                                        <i class="fa fa-play me-1"/>
                                        <span>In Progress</span>
                                    </div>
                                    
                                    <!-- Complete Button - Only show if in progress -->
                                    <button type="button" 
                                            t-if="props.record.data.state === 'in_progress'"
                                            class="tm_status_btn tm_status_done" 
                                            t-on-click="() => this.updateMissionState('done')">
                                        <i class="fa fa-flag-checkered me-1"/>
                                        <span>Complete</span>
                                    </button>
                                    
                                    <!-- Done Status Indicator -->
                                    <div t-if="props.record.data.state === 'done'"
                                         class="tm_status_indicator tm_status_done active">
                                        <i class="fa fa-flag-checkered me-1"/>
                                        <span>Done</span>
                                    </div>
                                    
                                    <!-- Cancel Button - Show if not done -->
                                    <button type="button" 
                                            t-if="props.record.data.state != 'done' and props.record.data.state != 'cancelled'"
                                            class="tm_status_btn tm_status_cancel" 
                                            t-on-click="() => this.updateMissionState('cancelled')">
                                        <i class="fa fa-times me-1"/>
                                        <span>Cancel</span>
                                    </button>
                                    
                                    <!-- Cancelled Status Indicator -->
                                    <div t-if="props.record.data.state === 'cancelled'"
                                         class="tm_status_indicator tm_status_cancelled active">
                                        <i class="fa fa-times me-1"/>
                                        <span>Cancelled</span>
                                    </div>
                                </div>
                                <div class="tm_optimization_controls">
                                    <button type="button" class="btn btn-sm btn-success tm_optimize_btn" t-on-click="optimizeRoute">
                                        <i class="fa fa-route me-1"/>Optimize Route
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- The Map Container -->
                    <div class="tm_interactive_map" t-ref="mapContainer">
                        <!-- Leaflet map will be rendered here by JS -->
                    </div>
                    
                    <!-- Map Instructions -->
                    <div class="tm_map_instructions">
                        <div class="tm_instruction_item">
                            <i class="fa fa-mouse-pointer text-primary"/>
                            <span>Click on map to set source</span>
                        </div>
                        <div class="tm_instruction_item">
                            <i class="fa fa-plus-circle text-success"/>
                            <span>Right-click to add destinations</span>
                        </div>
                        <div class="tm_instruction_item">
                            <i class="fa fa-arrows-alt text-warning"/>
                            <span>Drag markers to adjust positions</span>
                        </div>
                        <div class="tm_instruction_item">
                            <i class="fa fa-trash text-danger"/>
                            <span>Click markers to delete destinations</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- RIGHT COLUMN: Mission Details -->
            <div class="tm_details_column">
                <!-- Mission Header -->
                <div class="tm_mission_header">
                    <div class="tm_title_section">
                        <h1><t t-esc="props.record.data.name or 'New Mission'"/></h1>
                        <div class="tm_mission_type_badge">
                            <span class="badge badge-primary tm_mixed_badge">
                                <i class="fa fa-route me-1"/>
                                <t t-esc="props.record.data.mission_type_summary || 'Mixed Mission'"/>
                            </span>
                        </div>
                    </div>
                    
                    <div class="tm_metrics_grid">
                        <div class="tm_metric_card tm_cost_card">
                            <div class="tm_metric_icon"><i class="fa fa-dollar-sign"/></div>
                            <div class="tm_metric_content">
                                <span class="tm_metric_label">Total Cost</span>
                                <div class="tm_metric_value">
                                    <span><t t-esc="state.totalCost.toFixed(2)"/> DH</span>
                                </div>
                            </div>
                        </div>
                        <div class="tm_metric_card">
                            <div class="tm_metric_icon"><i class="fa fa-route"/></div>
                            <div class="tm_metric_content">
                                <span class="tm_metric_label">Total Distance</span>
                                <div class="tm_metric_value">
                                    <span><t t-esc="state.totalDistance.toFixed(2)"/> km</span>
                                </div>
                            </div>
                        </div>
                        <div class="tm_metric_card">
                            <div class="tm_metric_icon"><i class="fa fa-clock"/></div>
                            <div class="tm_metric_content">
                                <span class="tm_metric_label">Estimated Time</span>
                                <div class="tm_metric_value">
                                    <span t-if="state.totalDuration >= 60">
                                        <t t-esc="Math.floor(state.totalDuration / 60)"/>h <t t-esc="Math.round(state.totalDuration % 60)"/>min
                                    </span>
                                    <span t-else="">
                                        <t t-esc="Math.round(state.totalDuration)"/> min
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="tm_metric_card">
                            <div class="tm_metric_icon"><i class="fa fa-weight-hanging"/></div>
                            <div class="tm_metric_content">
                                <span class="tm_metric_label">Total Weight</span>
                                <div class="tm_metric_value">
                                    <span><t t-esc="(props.record.data.total_weight || 0).toFixed(1)"/> kg</span>
                                </div>
                            </div>
                        </div>
                        <div class="tm_metric_card">
                            <div class="tm_metric_icon"><i class="fa fa-cube"/></div>
                            <div class="tm_metric_content">
                                <span class="tm_metric_label">Total Volume</span>
                                <div class="tm_metric_value">
                                    <span><t t-esc="(props.record.data.total_volume || 0).toFixed(2)"/> m³</span>
                                </div>
                            </div>
                        </div>
                        <div class="tm_metric_card">
                             <div class="tm_metric_icon"><i class="fa fa-tasks"/></div>
                             <div class="tm_metric_content">
                                <span class="tm_metric_label">Progress</span>
                                <div class="progress" style="height: 20px;">
                                   <div class="progress-bar" role="progressbar" t-attf-style="width: {{props.record.data.destination_progress || 0}}%;" t-att-aria-valuenow="props.record.data.destination_progress || 0" aria-valuemin="0" aria-valuemax="100">
                                       <t t-esc="(props.record.data.destination_progress || 0).toFixed(0)"/>%
                                   </div>
                               </div>
                             </div>
                        </div>
                    </div>
                </div>

                <!-- Mission Details Form Sections -->
                <div class="tm_details_form">
                    <!-- Mission Configuration Section -->
                    <div class="tm_form_section">
                        <h4><i class="fa fa-cog me-2 text-info"/>Mission Configuration</h4>
                        <div class="tm_config_grid">
                            <div class="tm_config_item">
                                <label class="tm_config_label">Mission Summary</label>
                                <div class="tm_config_value">
                                    <div class="tm_mission_summary">
                                        <span class="badge badge-info me-2" t-if="props.record.data.pickup_count > 0">
                                            <i class="fa fa-arrow-up me-1"/>
                                            <t t-esc="props.record.data.pickup_count"/> Pickup<t t-if="props.record.data.pickup_count > 1">s</t>
                                        </span>
                                        <span class="badge badge-success" t-if="props.record.data.delivery_count > 0">
                                            <i class="fa fa-arrow-down me-1"/>
                                            <t t-esc="props.record.data.delivery_count"/> Deliver<t t-if="props.record.data.delivery_count > 1">ies</t><t t-else="">y</t>
                                        </span>
                                        <span class="text-muted" t-if="!props.record.data.pickup_count and !props.record.data.delivery_count">
                                            No destinations configured
                                        </span>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="tm_config_item">
                                <label class="tm_config_label">Mission Date</label>
                                <div class="tm_config_value">
                                    <input type="date" class="form-control" 
                                           t-att-value="formatDateForInput(props.record.data.mission_date)"
                                           t-on-change="onMissionDateChange"/>
                                </div>
                            </div>
                            
                                
                            <div class="tm_config_item">
                                <label class="tm_config_label">Driver</label>
                                <div class="tm_config_value">
                                    <div class="tm_dropdown_container">
                                        <div class="tm_driver_display tm_clickable_field" t-on-click="toggleDriverDropdown">
                                            <t t-if="props.record.data.driver_id">
                                                <div class="tm_driver_avatar">
                                                    <i class="fa fa-user"/>
                                                </div>
                                                <span><t t-esc="props.record.data.driver_id[1] || 'Select Driver'"/></span>
                                            </t>
                                            <t t-else="">
                                                <span class="text-muted">Select Driver</span>
                                            </t>
                                            <i class="fa fa-chevron-down ms-auto"/>
                                        </div>
                                        <div class="tm_dropdown_menu" t-if="state.showDriverDropdown">
                                            <div class="tm_dropdown_search">
                                                <input type="text" placeholder="Search drivers..." 
                                                       t-model="state.driverSearch" 
                                                       t-on-input="filterDrivers"/>
                                            </div>
                                            <div class="tm_dropdown_options">
                                                <t t-foreach="state.filteredDrivers" t-as="driver" t-key="driver.id">
                                                    <div class="tm_dropdown_option" t-on-click="() => this.selectDriver(driver)">
                                                        <div class="tm_driver_avatar">
                                                            <i class="fa fa-user"/>
                                                        </div>
                                                        <span><t t-esc="driver.name"/></span>
                                                    </div>
                                                </t>
                                                <div t-if="!state.filteredDrivers.length" class="tm_dropdown_empty">
                                                    No drivers found
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="tm_config_item">
                                <label class="tm_config_label">Vehicle</label>
                                <div class="tm_config_value">
                                    <div class="tm_dropdown_container">
                                        <div class="tm_vehicle_display tm_clickable_field" t-on-click="toggleVehicleDropdown">
                                            <i class="fa fa-truck me-2"/>
                                            <span><t t-esc="props.record.data.vehicle_id and props.record.data.vehicle_id[1] or 'Select Vehicle'"/></span>
                                            <i class="fa fa-chevron-down ms-auto"/>
                                        </div>
                                        <div class="tm_dropdown_menu" t-if="state.showVehicleDropdown">
                                            <div class="tm_dropdown_search">
                                                <input type="text" placeholder="Search vehicles..." 
                                                       t-model="state.vehicleSearch" 
                                                       t-on-input="filterVehicles"/>
                                            </div>
                                            <div class="tm_dropdown_options">
                                                <t t-foreach="state.filteredVehicles" t-as="vehicle" t-key="vehicle.id">
                                                    <div class="tm_dropdown_option" t-on-click="() => this.selectVehicle(vehicle)">
                                                        <i class="fa fa-truck me-2"/>
                                                        <span><t t-esc="vehicle.name"/></span>
                                                    </div>
                                                </t>
                                                <div t-if="!state.filteredVehicles.length" class="tm_dropdown_empty">
                                                    No vehicles found
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

  
                            
                            <div class="tm_config_item">
                                <label class="tm_config_label">Priority</label>
                                <div class="tm_config_value">
                                    <div class="tm_priority_group">
                                        <label class="tm_priority_option tm_priority_low" t-att-class="{'active': props.record.data.priority === '0'}">
                                            <input type="radio" name="priority" value="0" 
                                                   t-att-checked="props.record.data.priority === '0'"
                                                   t-on-change="onPriorityChange"/>
                                            <span>Low</span>
                                        </label>
                                        <label class="tm_priority_option tm_priority_normal" t-att-class="{'active': props.record.data.priority === '1'}">
                                            <input type="radio" name="priority" value="1" 
                                                   t-att-checked="props.record.data.priority === '1' || !props.record.data.priority"
                                                   t-on-change="onPriorityChange"/>
                                            <span>Normal</span>
                                        </label>
                                        <label class="tm_priority_option tm_priority_high" t-att-class="{'active': props.record.data.priority === '2'}">
                                            <input type="radio" name="priority" value="2" 
                                                   t-att-checked="props.record.data.priority === '2'"
                                                   t-on-change="onPriorityChange"/>
                                            <span>High</span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Source Location Display -->
                    <div class="tm_form_section">
                        <h4><i class="fa fa-play-circle me-2 text-primary"/>Source Location</h4>
                        <div class="tm_location_display">
                            <div t-if="state.source" class="tm_location_item tm_source_item">
                                <i class="fa fa-map-marker-alt text-primary"/>
                                <div class="tm_location_info">
                                    <span class="tm_location_address"><t t-esc="state.source.location"/></span>
                                    <small class="tm_location_coords"><t t-esc="state.source.latitude.toFixed(4)"/>, <t t-esc="state.source.longitude.toFixed(4)"/></small>
                                </div>
                            </div>
                            <div t-else="" class="tm_empty_destinations">
                                <p>Click on the map to set a source.</p>
                            </div>
                        </div>
                    </div>

                    <!-- Destinations List -->
                    <div class="tm_form_section">
                        <h4>
                            <i class="fa fa-flag-checkered me-2 text-success"/>
                            Destinations 
                            <span class="badge badge-secondary"><t t-esc="state.destinations.length"/></span>
                        </h4>
                        <div class="tm_destinations_list">
                            <t t-if="state.destinations.length > 0">
                                <t t-foreach="state.destinations" t-as="dest" t-key="dest.localId">
                                    <div class="tm_location_item tm_destination_item" t-att-class="'tm-dest-' + (dest.mission_type || 'delivery')">
                                        <div class="tm_destination_number"><t t-esc="dest.sequence"/></div>
                                        <div class="tm_destination_type_icon">
                                            <i t-if="dest.mission_type === 'pickup'" class="fa fa-arrow-up text-info" title="Pickup"/>
                                            <i t-else="" class="fa fa-arrow-down text-success" title="Delivery"/>
                                        </div>
                                        <div class="tm_location_info">
                                            <span class="tm_location_address"><t t-esc="dest.location"/></span>
                                            <small class="tm_location_coords"><t t-esc="dest.latitude.toFixed(4)"/>, <t t-esc="dest.longitude.toFixed(4)"/></small>
                                            
                                            <!-- Mission Type Selection -->
                                            <div class="tm_destination_type_selector">
                                                <div class="tm_type_radio_group">
                                                    <label class="tm_type_option tm_type_pickup" t-att-class="{'active': dest.mission_type === 'pickup'}">
                                                        <input type="radio" t-att-name="'dest_type_' + dest.localId" value="pickup" 
                                                               t-att-checked="dest.mission_type === 'pickup'"
                                                               t-on-change="(ev) => this.onDestinationTypeChange(dest.localId, ev.target.value)"/>
                                                        <span class="tm_type_label">
                                                            <i class="fa fa-arrow-up me-1"/>Pickup
                                                        </span>
                                                    </label>
                                                    <label class="tm_type_option tm_type_delivery" t-att-class="{'active': dest.mission_type === 'delivery'}">
                                                        <input type="radio" t-att-name="'dest_type_' + dest.localId" value="delivery" 
                                                               t-att-checked="dest.mission_type === 'delivery' || !dest.mission_type"
                                                               t-on-change="(ev) => this.onDestinationTypeChange(dest.localId, ev.target.value)"/>
                                                        <span class="tm_type_label">
                                                            <i class="fa fa-arrow-down me-1"/>Delivery
                                                        </span>
                                                    </label>
                                                </div>
                                            </div>

                                            <!-- Compact Time and Package Info -->
                                            <div class="tm_destination_details">
                                                <!-- Show estimated arrival time (calculated) -->
                                                <t t-if="dest.estimated_arrival_time">
                                                    <span class="tm_detail_item tm_time_info tm_estimated_time">
                                                        <i class="fa fa-clock"/>
                                                        Est: <t t-esc="new Date(dest.estimated_arrival_time).toLocaleString('en-GB', {day: '2-digit', month: '2-digit', hour: '2-digit', minute: '2-digit'})"/>
                                                        <t t-if="dest.service_duration > 0">
                                                            (+<t t-esc="dest.service_duration"/>min)
                                                        </t>
                                                    </span>
                                                </t>
                                                
                                                <!-- Show expected arrival time if different from estimated -->
                                                <t t-if="dest.expected_arrival_time and dest.expected_arrival_time !== dest.estimated_arrival_time">
                                                    <span class="tm_detail_item tm_time_info tm_expected_time">
                                                        <i class="fa fa-calendar-check"/>
                                                        Target: <t t-esc="new Date(dest.expected_arrival_time).toLocaleString('en-GB', {day: '2-digit', month: '2-digit', hour: '2-digit', minute: '2-digit'})"/>
                                                    </span>
                                                </t>
                                                
                                                <t t-if="dest.package_type">
                                                    <span class="tm_detail_item tm_package_info">
                                                        <i t-if="dest.package_type === 'pallet'" class="fa fa-pallet-alt"/>
                                                        <i t-else="" class="fa fa-boxes"/>
                                                        <t t-esc="dest.package_type === 'pallet' ? 'Pallet' : 'Packages'"/>
                                                        <t t-if="dest.total_weight > 0">
                                                            - <t t-esc="dest.total_weight.toFixed(1)"/>kg
                                                        </t>
                                                        <t t-if="dest.total_volume > 0">
                                                            - <t t-esc="dest.total_volume.toFixed(2)"/>m³
                                                        </t>
                                                    </span>
                                                </t>
                                                
                                                <t t-if="dest.requires_signature">
                                                    <span class="tm_detail_item tm_signature_required">
                                                        <i class="fa fa-signature"/>
                                                        Signature Required
                                                    </span>
                                                </t>
                                            </div>
                                        </div>
                                        <div class="tm_location_actions">
                                            <button type="button" class="btn btn-sm btn-outline-danger" t-on-click="() => this.removeDestinationByLocalId(dest.localId)">
                                                <i class="fa fa-trash"/>
                                            </button>
                                        </div>
                                    </div>
                                </t>
                            </t>
                            <div t-else="" class="tm_empty_destinations">
                                <i class="fa fa-map-signs fa-2x text-muted"/>
                                <p>Right-click on map to add destinations</p>
                            </div>
                        </div>
                    </div>

                    <!-- Operational Notes Section -->
                    <div class="tm_form_section">
                        <h4><i class="fa fa-sticky-note me-2 text-warning"/>Operational Notes</h4>
                        <div class="tm_notes_container">
                            <textarea class="form-control tm_notes_textarea" 
                                      placeholder="Add mission notes and special instructions..."
                                      t-att-value="props.record.data.notes"
                                      t-on-change="onNotesChange"
                                      rows="4"></textarea>
                        </div>
                    </div>

                    <!-- Route Summary -->
                    <div class="tm_form_section" t-if="state.source and state.destinations.length > 0">
                        <h4><i class="fa fa-list-ol me-2 text-info"/>Route Summary</h4>
                        <div class="tm_route_summary">
                            <div class="tm_route_step">
                                <div class="tm_route_step_marker tm_route_start">
                                    <i class="fa fa-play"/>
                                </div>
                                <div class="tm_route_step_content">
                                    <strong>Start:</strong> <t t-esc="state.source.location"/>
                                </div>
                            </div>
                            <t t-foreach="state.destinations" t-as="dest" t-key="dest.localId">
                                <div class="tm_route_step">
                                    <div class="tm_route_step_marker tm_route_destination">
                                        <t t-esc="dest.sequence"/>
                                    </div>
                                    <div class="tm_route_step_content">
                                        <strong>Stop <t t-esc="dest.sequence"/>:</strong> <t t-esc="dest.location"/>
                                    </div>
                                </div>
                            </t>
                        </div>
                    </div>

                    <!-- Cost Breakdown Section -->
                    <div class="tm_form_section tm_cost_section" t-if="state.totalCost > 0">
                        <h4><i class="fa fa-calculator me-2 text-success"/>Cost Breakdown</h4>
                        <div class="tm_cost_breakdown_modern">
                            <!-- Fuel Cost -->
                            <div class="tm_cost_row" t-if="state.costBreakdown.fuelCost > 0">
                                <div class="tm_cost_icon">
                                    <i class="fa fa-gas-pump"/>
                                </div>
                                <div class="tm_cost_label">Fuel Cost</div>
                                <div class="tm_cost_amount">
                                    <t t-esc="state.costBreakdown.fuelCost.toFixed(2)"/> DH
                                </div>
                            </div>
                            
                            <!-- Driver Cost -->
                            <div class="tm_cost_row" t-if="state.costBreakdown.driverCost > 0">
                                <div class="tm_cost_icon">
                                    <i class="fa fa-user"/>
                                </div>
                                <div class="tm_cost_label">Driver Cost</div>
                                <div class="tm_cost_amount">
                                    <t t-esc="state.costBreakdown.driverCost.toFixed(2)"/> DH
                                </div>
                            </div>
                            
                            <!-- Maintenance &amp; Tolls -->
                            <div class="tm_cost_row" t-if="state.costBreakdown.otherCosts > 0">
                                <div class="tm_cost_icon">
                                    <i class="fa fa-wrench"/>
                                </div>
                                <div class="tm_cost_label">Maintenance &amp; Tolls</div>
                                <div class="tm_cost_amount">
                                    <t t-esc="state.costBreakdown.otherCosts.toFixed(2)"/> DH
                                </div>
                            </div>
                            
                            <!-- Total Cost -->
                            <div class="tm_cost_row tm_cost_total_row">
                                <div class="tm_cost_icon">
                                    <i class="fa fa-calculator"/>
                                </div>
                                <div class="tm_cost_label">Total Cost</div>
                                <div class="tm_cost_amount tm_total_amount">
                                    <t t-esc="state.totalCost.toFixed(2)"/> DH
                                </div>
                            </div>
                            
                            <!-- Cost per KM -->
                            <div class="tm_cost_row" t-if="state.totalDistance > 0">
                                <div class="tm_cost_icon tm_cost_per_km_icon">
                                    <i class="fa fa-road"/>
                                </div>
                                <div class="tm_cost_label">Cost per KM</div>
                                <div class="tm_cost_amount">
                                    <t t-esc="(state.totalCost / state.totalDistance).toFixed(2)"/> DH
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </t>

</templates>